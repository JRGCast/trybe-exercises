# Testes automatizados 
# Quem nunca arrumou um problema em um c√≥digo e acabou fazendo-o deixar de funcionar para outro cen√°rio? Ou ficou horas testando as mais diversas condi√ß√µes para um algoritmo e no meio do caminho teve de mexer no c√≥digo e recome√ßar tudo novamente. üòÅ
# Atrav√©s de testes automatizados, a pessoa desenvolvedora √© capaz de identificar mais facilmente um bug ou verificar que altera√ß√µes do c√≥digo n√£o afetaram o comportamento esperado do sistema.
# Em nosso curso utilizaremos a biblioteca pytest , um framework que facilita a escrita de testes simples, mas capazes de testar funcionalidades complexas em aplica√ß√µes e bibliotecas.
# ‚ö†Ô∏è Lembre-se de instalar a biblioteca somente no ambiente virtual do seu projeto.
# A instala√ß√£o √© feita atrav√©s do pip utilizando o comando:
# python3 -m pip install pytest
# E podemos verificar utilizando o comando:
# python3 -m pytest --version
# A sa√≠da esperada √© similar √† apresentada abaixo.
# This is pytest version 5.3.0, imported from /home/cassiobotaro/projects/gerenciador-tarefas/.venv/lib/python3.8/site-packages/pytest.py
# üìù Que tal vermos um exemplo?

# teste o arquivo test_codigo1.py e se coincide com o que o codigo1.py queria fazer

# Notem que o nome do arquivo de testes possui o prefixo test_ , assim como a defini√ß√£o das fun√ß√µes de teste. Isto √© necess√°rio para que seus testes sejam descobertos pela ferramenta.
# Uma fun√ß√£o de teste √© similar a qualquer outra, por√©m tem o proposito de verificar se o resultado obtido foi o mesmo do esperado. No c√≥digo isto pode ser visto atrav√©s da utiliza√ß√£o da palavra reservada assert .
# O comando assert funciona da seguinte maneira: caso a express√£o recebida seja verdadeira (avaliada como True ), nada acontece, por√©m caso seja falsa (avaliada como False ), uma exce√ß√£o do tipo AssertionError √© lan√ßada. A pytest captura este erro e tenta apresentar uma compara√ß√£o entre o esperado e o recebido da melhor maneira poss√≠vel.
# Vamos rodar nossos testes e ver o resultado? Vamos utilizar o comando:

# python3 -m pytest
