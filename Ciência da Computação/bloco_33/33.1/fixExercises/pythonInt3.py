# Estruturas condicionais 

salary = 6000

position = ""
if salary <= 2000:
    position = "estagiÃ¡rio"
elif 2000 < salary <= 5800:
    position = "jÃºnior"
elif 5800 < salary <= 7500:
    position = "pleno"
elif 7500 < salary <= 10500:
    position = "senior"
else:
    position = "lÃ­der"

# Note que if e elif sÃ£o seguidos de uma expressÃ£o que se avaliada como verdadeira, o trecho de cÃ³digo serÃ¡ executado. Um outro detalhe Ã© a ausÃªncia de chaves para definir o bloco. Utilizamos o caractere : para indicar abertura de um bloco e somente indentaÃ§Ã£o para indicar o tÃ©rmino.
# O bloco else serÃ¡ executado se nenhuma das condiÃ§Ãµes anteriores for satisfeita.
# Agora que escrevemos mais linhas, notamos tambÃ©m a ausÃªncia do caractere ; . Pois bem, a filosofia da linguagem nos diz: "Legibilidade conta...", entÃ£o nÃ£o precisamos mais dele.
# Agora com a senioridade em mÃ£os, podemos criar uma nova coluna em nossa base dados com essa informaÃ§Ã£o e realizar o agrupamento por cargo, desenhando lindos grÃ¡ficos. ðŸ“Š
# Posso modificar para uma estrutura switch ?
# A estrutura condicional if e seu aninhamento com elif e else Ã© tÃ£o simples e legÃ­vel que nÃ£o precisamos da estrutura switch .
# "Simples Ã© melhor do que complexo" - Zen do python
# Em alguns casos, que nÃ£o prejudiquem a legibilidade, podemos criar estruturas de mapeamento ( dicts ) para simplificar o aninhamento de condicionais.

key = "id"
from_to = {
    "id": "identifier",
    "mail": "email",
    "lastName": "last_name",
}
from_to[key]
